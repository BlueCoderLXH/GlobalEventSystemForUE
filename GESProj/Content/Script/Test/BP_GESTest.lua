---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lixiaohua.
--- DateTime: 2023/12/18 15:10
---

local M = UnLua.Class()

function M:Initialize()
    printf("--------------------Initialize Lua GES Test-------------------------")
end

function M:DoLuaTest_Register()
    GES.Register(CppEvents.BoolTestEvent, { self, self.OnBoolTestEvent })
    GES.Register(CppEvents.IntegerTestEvent, { self, self.OnIntegerTestEvent })
    GES.Register(CppEvents.FloatTestEvent, { self, self.OnFloatTestEvent })
    GES.Register(CppEvents.NameTestEvent, { self, self.OnNameTestEvent })
    GES.Register(CppEvents.StringTestEvent, { self, self.OnStringTestEvent })
    GES.Register(CppEvents.TextTestEvent, { self, self.OnTextTestEvent })
    GES.Register(CppEvents.EnumTestEvent, { self, self.OnEnumTestEvent })
    GES.Register(CppEvents.StructTestEvent, { self, self.OnStructTestEvent })
    GES.Register(CppEvents.ObjectTestEvent, { self, self.OnObjectTestEvent })
    GES.Register(CppEvents.ClassTestEvent, { self, self.OnClassTestEvent })
    GES.Register(CppEvents.ArrayTestEvent, { self, self.OnArrayTestEvent })
    GES.Register(CppEvents.SetTestEvent, { self, self.OnSetTestEvent })
    GES.Register(CppEvents.MapTestEvent, { self, self.OnMapTestEvent })
end

function M:DoLuaTest_Dispatch()
    GES.Dispatch(CppEvents.BoolTestEvent, { GES.Bool, true })
    GES.Dispatch(CppEvents.IntegerTestEvent, { GES.Integer, 520 })
    GES.Dispatch(CppEvents.FloatTestEvent, { GES.Float, 520.1314 })
    GES.Dispatch(CppEvents.StringTestEvent, { GES.String, "FString" })
    GES.Dispatch(CppEvents.NameTestEvent, { GES.Name, "FName" })
    GES.Dispatch(CppEvents.TextTestEvent, { GES.Text, "FText" })
    GES.Dispatch(CppEvents.EnumTestEvent, { GES.Enum, UE4.EGESCppType.UEnum })
    GES.Dispatch(CppEvents.StructTestEvent, { GES.Struct, UE4.FVector(5, 52, 520) })

    self.TestStr = "Hello GESTest"
    GES.Dispatch(CppEvents.ObjectTestEvent, { GES.Object, self })

    local ClassPtr = LoadClass("/Game/Blueprints/BP_GESTest.BP_GESTest_C")
    GES.Dispatch(CppEvents.ClassTestEvent, { GES.Class, ClassPtr })

    local ArrayValue = UE4.TArray(UE4.int32)
    ArrayValue:Add(520)
    ArrayValue:Add(521)
    GES.Dispatch(CppEvents.ArrayTestEvent, { GES.Array, ArrayValue })

    local SetValue = UE4.TSet(UE4.int32)
    SetValue:Add(520)
    SetValue:Add(521)
    GES.Dispatch(CppEvents.SetTestEvent, { GES.Set, SetValue })

    local MapValue = UE4.TMap(UE4.int32, UE4.FVector)
    MapValue:Add(520, UE4.FVector(1, 10, 100))
    MapValue:Add(521, UE4.FVector(5, 52, 520))
    GES.Dispatch(CppEvents.MapTestEvent, { GES.Map, MapValue })
end

function M:DoLuaTest_Unregister()
    GES.Unregister(CppEvents.BoolTestEvent, { self, self.OnBoolTestEvent })
    GES.Unregister(CppEvents.IntegerTestEvent, { self, self.OnIntegerTestEvent })
    GES.Unregister(CppEvents.FloatTestEvent, { self, self.OnFloatTestEvent })
    GES.Unregister(CppEvents.StringTestEvent, { self, self.OnStringTestEvent })
    GES.Unregister(CppEvents.NameTestEvent, { self, self.OnNameTestEvent })
    GES.Unregister(CppEvents.TextTestEvent, { self, self.OnTextTestEvent })
    GES.Unregister(CppEvents.EnumTestEvent, { self, self.OnEnumTestEvent })
    GES.Unregister(CppEvents.StructTestEvent, { self, self.OnStructTestEvent })
    GES.Unregister(CppEvents.ObjectTestEvent, { self, self.OnObjectTestEvent })
    GES.Unregister(CppEvents.ClassTestEvent, { self, self.OnClassTestEvent })
    GES.Unregister(CppEvents.ArrayTestEvent, { self, self.OnArrayTestEvent })
    GES.Unregister(CppEvents.SetTestEvent, { self, self.OnSetTestEvent })
    GES.Unregister(CppEvents.MapTestEvent, { self, self.OnMapTestEvent })
end

--- Bool Test
function M:OnBoolTestEvent(EventData)
    BeginTest("OnBoolTestEvent")

    local BoolValue = EventData:GetBool(0)
    printf("OnBoolTestEvent BoolValue:%s", tostring(BoolValue))

    EndTest("OnBoolTestEvent")
end

--- Integer Test
function M:OnIntegerTestEvent(EventData)
    BeginTest("OnIntegerTestEvent")

    local IntegerValue = EventData:GetInteger(0)
    printf("OnIntegerTestEvent IntegerValue:%s", tostring(IntegerValue))

    EndTest("OnIntegerTestEvent")
end

--- Float Test
function M:OnFloatTestEvent(EventData)
    BeginTest("OnFloatTestEvent")

    local FloatValue = EventData:GetFloat(0)
    printf("OnFloatTestEvent FloatValue:%.4f", FloatValue)

    EndTest("OnFloatTestEvent")
end

--- FString Test
function M:OnStringTestEvent(EventData)
    BeginTest("OnStringTestEvent")

    local StringValue = EventData:GetString(0)
    printf("OnStringTestEvent StringValue:%s", tostring(StringValue))

    EndTest("OnStringTestEvent")
end

--- FName Test
function M:OnNameTestEvent(EventData)
    BeginTest("OnNameTestEvent")

    local NameValue = EventData:GetName(0)
    printf("OnNameTestEvent NameValue:%s", tostring(NameValue))

    EndTest("OnNameTestEvent")
end

--- FText Test
function M:OnTextTestEvent(EventData)
    BeginTest("OnTextTestEvent")

    local TextValue = EventData:GetText(0)
    printf("OnTextTestEvent TextValue:%s", tostring(TextValue))

    EndTest("OnTextTestEvent")
end

--- UEnum Test
function M:OnEnumTestEvent(EventData)
    BeginTest("OnEnumTestEvent")

    local EnumValue = EventData:GetEnum(0)
    printf("OnEnumTestEvent EnumValue:%s", tostring(EnumValue))

    EndTest("OnEnumTestEvent")
end

--- UStruct Test
function M:OnStructTestEvent(EventData)
    BeginTest("OnStructTestEvent")

    local StructValue = EventData:GetStruct(0)
    printf("OnStructTestEvent StructValue:{%s}", tostring(StructValue))

    EndTest("OnStructTestEvent")
end

--- UObject Test
function M:OnObjectTestEvent(EventData)
    BeginTest("OnObjectTestEvent")

    local ObjectValue = EventData:GetObject(0)
    printf("OnObjectTestEvent ObjectValue:%s TestStr:%s", tostring(ObjectValue), ObjectValue.TestStr)

    EndTest("OnObjectTestEvent")
end

--- UClass Test
function M:OnClassTestEvent(EventData)
    BeginTest("OnClassTestEvent")

    local ClassValue = EventData:GetClass(0)
    printf("OnClassTestEvent Class:%s", GetObjectName(ClassValue))

    EndTest("OnClassTestEvent")
end

--- TArray Test
function M:OnArrayTestEvent(EventData)
    BeginTest("OnArrayTestEvent")

    local ArrayValue = EventData:GetArray(UE4.int32, 0)
    for i = 1, ArrayValue:Num() do
        printf("ArrayValue[%d]=%d", i, ArrayValue:Get(i))
    end

    EndTest("OnArrayTestEvent")
end

--- TSet Test
function M:OnSetTestEvent(EventData)
    BeginTest("OnSetTestEvent")

    local SetValue = EventData:GetSet(UE4.int32, 0)
    local SetArray = SetValue:ToArray()
    for i = 1, SetArray:Num() do
        printf("SetValue %d", SetArray:Get(i))
    end

    EndTest("OnSetTestEvent")
end

--- Map Test
function M:OnMapTestEvent(EventData)
    BeginTest("OnTMapTestEvent")

    local MapValue = EventData:GetMap(UE4.int32, UE4.FVector, 0)
    dump_map(MapValue)

    EndTest("OnTMapTestEvent")
end

return M